/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TenantsImport } from './routes/tenants'
import { Route as RoomsImport } from './routes/rooms'
import { Route as ReportsImport } from './routes/reports'
import { Route as AuthImport } from './routes/auth'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TenantsRoute = TenantsImport.update({
  id: '/tenants',
  path: '/tenants',
  getParentRoute: () => rootRoute,
} as any)

const RoomsRoute = RoomsImport.update({
  id: '/rooms',
  path: '/rooms',
  getParentRoute: () => rootRoute,
} as any)

const ReportsRoute = ReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsImport
      parentRoute: typeof rootRoute
    }
    '/rooms': {
      id: '/rooms'
      path: '/rooms'
      fullPath: '/rooms'
      preLoaderRoute: typeof RoomsImport
      parentRoute: typeof rootRoute
    }
    '/tenants': {
      id: '/tenants'
      path: '/tenants'
      fullPath: '/tenants'
      preLoaderRoute: typeof TenantsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRoute
  '/auth': typeof AuthRoute
  '/reports': typeof ReportsRoute
  '/rooms': typeof RoomsRoute
  '/tenants': typeof TenantsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRoute
  '/auth': typeof AuthRoute
  '/reports': typeof ReportsRoute
  '/rooms': typeof RoomsRoute
  '/tenants': typeof TenantsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRoute
  '/auth': typeof AuthRoute
  '/reports': typeof ReportsRoute
  '/rooms': typeof RoomsRoute
  '/tenants': typeof TenantsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/auth' | '/reports' | '/rooms' | '/tenants'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/auth' | '/reports' | '/rooms' | '/tenants'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/auth'
    | '/reports'
    | '/rooms'
    | '/tenants'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRoute
  AuthRoute: typeof AuthRoute
  ReportsRoute: typeof ReportsRoute
  RoomsRoute: typeof RoomsRoute
  TenantsRoute: typeof TenantsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute,
  AuthRoute: AuthRoute,
  ReportsRoute: ReportsRoute,
  RoomsRoute: RoomsRoute,
  TenantsRoute: TenantsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/auth",
        "/reports",
        "/rooms",
        "/tenants"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/reports": {
      "filePath": "reports.tsx"
    },
    "/rooms": {
      "filePath": "rooms.tsx"
    },
    "/tenants": {
      "filePath": "tenants.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
